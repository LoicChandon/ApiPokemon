// <auto-generated />
using System;
using ApiPokemon.Models.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ApiPokemon.Migrations
{
    [DbContext(typeof(PokemonDBContext))]
    partial class PokemonDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ApiPokemon.Models.EntityFramework.Capture", b =>
                {
                    b.Property<int>("IdDresseur")
                        .HasColumnType("integer")
                        .HasColumnName("iddresseur");

                    b.Property<int>("IdPokemon")
                        .HasColumnType("integer")
                        .HasColumnName("idpokemon");

                    b.Property<DateTime>("DateCapture")
                        .HasColumnType("date")
                        .HasColumnName("datecapture");

                    b.Property<string>("SurnomPokemon")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("surnompokemon");

                    b.HasKey("IdDresseur", "IdPokemon")
                        .HasName("pk_capture");

                    b.HasIndex("IdPokemon");

                    b.ToTable("capture");
                });

            modelBuilder.Entity("ApiPokemon.Models.EntityFramework.Dresseur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("iddresseur");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("date")
                        .HasColumnName("datecreationdresseur");

                    b.Property<string>("Genre")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("genredresseur");

                    b.Property<double>("HeureDeJeu")
                        .HasColumnType("double precision")
                        .HasColumnName("heuredejeudresseur");

                    b.Property<string>("Pseudo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("pseudodresseur");

                    b.HasKey("Id");

                    b.HasIndex("Pseudo")
                        .IsUnique();

                    b.ToTable("dresseur");

                    b.HasCheckConstraint("ck_dresseur_heuresdejeu", "heuredejeudresseur >= 0");
                });

            modelBuilder.Entity("ApiPokemon.Models.EntityFramework.Pokemon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idpokemon");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BasePV")
                        .HasColumnType("integer")
                        .HasColumnName("basepvpokemon");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("nompokemon");

                    b.Property<string>("Type1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("type1pokemon");

                    b.Property<string>("Type2")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("type2pokemon");

                    b.HasKey("Id");

                    b.HasIndex("Nom")
                        .IsUnique();

                    b.ToTable("pokemon");
                });

            modelBuilder.Entity("ApiPokemon.Models.EntityFramework.Capture", b =>
                {
                    b.HasOne("ApiPokemon.Models.EntityFramework.Dresseur", "DresseurCapture")
                        .WithMany("CapturesDresseur")
                        .HasForeignKey("IdDresseur")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_capture_id_dresseur");

                    b.HasOne("ApiPokemon.Models.EntityFramework.Pokemon", "PokemonCapture")
                        .WithMany("CapturesPokemon")
                        .HasForeignKey("IdPokemon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_capture_id_pokemon");

                    b.Navigation("DresseurCapture");

                    b.Navigation("PokemonCapture");
                });

            modelBuilder.Entity("ApiPokemon.Models.EntityFramework.Dresseur", b =>
                {
                    b.Navigation("CapturesDresseur");
                });

            modelBuilder.Entity("ApiPokemon.Models.EntityFramework.Pokemon", b =>
                {
                    b.Navigation("CapturesPokemon");
                });
#pragma warning restore 612, 618
        }
    }
}
